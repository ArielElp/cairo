//! > Match extern

//! > test_function_name
check_find_local_variables

//! > function_name
foo

//! > function_code
func foo(x: felt) -> felt {
    let x1 = x + x;
    let x2 = x1 + x1;
    let x3 = if x2 == 0 { 1 } else { 2 };
    // The "if" revokes "x1".
    x1 + x3
    let x4 = if x1 == 0 { 1 } else { 2 };
    revoke_ap();
    x4
}

//! > module_code
// Revokes ap since this function is recursive.
func revoke_ap() -> felt {
    revoke_ap()
}

//! > lowering_format
blk0:
Inputs:
Statements:
  (v3: core::felt) <- 1u
Drops:
End:
  Callsite(v3)

blk1:
Inputs: v4: core::NonZero::<core::felt>
Statements:
  (v5: core::felt) <- 2u
Drops: v4
End:
  Callsite(v5)

blk2:
Inputs:
Statements:
  (v8: core::felt) <- 1u
Drops:
End:
  Callsite(v8)

blk3:
Inputs: v9: core::NonZero::<core::felt>
Statements:
  (v10: core::felt) <- 2u
Drops: v9
End:
  Callsite(v10)

blk4:
Inputs: v0: core::felt
Statements:
  (v1: core::felt) <- core::felt_add(v0, v0)
  (v2: core::felt) <- core::felt_add(v1, v1)
  (v6: core::felt) <- match core::felt_jump_nz(v2) {
    () => blk0,
    (v4) => blk1,
  }
  (v7: core::felt) <- core::felt_add(v1, v6)
  (v11: core::felt) <- match core::felt_jump_nz(v1) {
    () => blk2,
    (v9) => blk3,
  }
  (v12: core::felt) <- test_crate::revoke_ap()
Drops: v0, v1, v2, v6, v7, v12
End:
  Callsite(v11)

//! > local_variables
v1, v11
