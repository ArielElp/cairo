type RangeCheck = RangeCheck;
type Uninitialized<RangeCheck> = Uninitialized<RangeCheck>;
type GasBuiltin = GasBuiltin;
type Uninitialized<GasBuiltin> = Uninitialized<GasBuiltin>;
type felt = felt;
type Array<felt> = Array<felt>;
type core::PanicResult::<core::array::Array::<core::felt>> = Enum<ut@[1629869585859386708777359278359478328649467785770005626186298023837162394309], Array<felt>, Array<felt>>;
type System = System;
type Snapshot<Array<felt>> = Snapshot<Array<felt>>;
type u32 = u32;
type Unit = Struct<ut@[1325343513152088812341467750635149026053683136611136091911357178651207272643]>;
type core::bool = Enum<ut@[1428587981972971377690703480718106917688158670535227238524565791273937320306], Unit, Unit>;
type BuiltinCosts = BuiltinCosts;
type test_contract::test_contract::SomeTest::Position = Struct<ut@[645254692952216104249752625534111935020012504401239959037703355396923016218], felt, felt>;
type core::PanicResult::<test_contract::test_contract::SomeTest::Position> = Enum<ut@[1263048066903180768745271102528272467614315588458314621603059920808913252266], test_contract::test_contract::SomeTest::Position, Array<felt>>;
type StorageBaseAddress = StorageBaseAddress;
type core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>> = Enum<ut@[512253987425621197283462165564273765420482785318064040628914189826071901212], test_contract::test_contract::SomeTest::Position, Array<felt>>;
type Uninitialized<felt> = Uninitialized<felt>;
type StorageAddress = StorageAddress;
type core::result::Result::<core::felt, core::array::Array::<core::felt>> = Enum<ut@[1775391202019154459836461443165096133047740358213622036106517721424732153731], felt, Array<felt>>;

libfunc alloc_local<RangeCheck> = alloc_local<RangeCheck>;
libfunc alloc_local<GasBuiltin> = alloc_local<GasBuiltin>;
libfunc finalize_locals = finalize_locals;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc get_gas = get_gas;
libfunc branch_align = branch_align;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc jump = jump;
libfunc drop<Array<felt>> = drop<Array<felt>>;
libfunc drop<Uninitialized<RangeCheck>> = drop<Uninitialized<RangeCheck>>;
libfunc drop<Uninitialized<GasBuiltin>> = drop<Uninitialized<GasBuiltin>>;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<375233589013918064796019> = felt_const<375233589013918064796019>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<core::PanicResult::<core::array::Array::<core::felt>>> = store_temp<core::PanicResult::<core::array::Array::<core::felt>>>;
libfunc snapshot_take<Array<felt>> = snapshot_take<Array<felt>>;
libfunc array_len<felt> = array_len<felt>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc store_local<RangeCheck> = store_local<RangeCheck>;
libfunc store_local<GasBuiltin> = store_local<GasBuiltin>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc get_gas_all = get_gas_all;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc function_call<user@test_contract::test_contract::SomeTest::get_name> = function_call<user@test_contract::test_contract::SomeTest::get_name>;
libfunc enum_match<core::PanicResult::<test_contract::test_contract::SomeTest::Position>> = enum_match<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>;
libfunc store_temp<test_contract::test_contract::SomeTest::Position> = store_temp<test_contract::test_contract::SomeTest::Position>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc function_call<user@test_contract::test_contract::SomeTest::PositionSerde::serialize> = function_call<user@test_contract::test_contract::SomeTest::PositionSerde::serialize>;
libfunc enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0> = enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc function_call<user@test_contract::test_contract::SomeTest::name::read> = function_call<user@test_contract::test_contract::SomeTest::name::read>;
libfunc enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 1> = enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 1>;
libfunc store_temp<core::PanicResult::<test_contract::test_contract::SomeTest::Position>> = store_temp<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>;
libfunc enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 0> = enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 0>;
libfunc dup<test_contract::test_contract::SomeTest::Position> = dup<test_contract::test_contract::SomeTest::Position>;
libfunc struct_deconstruct<test_contract::test_contract::SomeTest::Position> = struct_deconstruct<test_contract::test_contract::SomeTest::Position>;
libfunc drop<felt> = drop<felt>;
libfunc function_call<user@core::serde::FeltSerde::serialize> = function_call<user@core::serde::FeltSerde::serialize>;
libfunc felt_const<0> = felt_const<0>;
libfunc storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336> = storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336>;
libfunc store_temp<StorageBaseAddress> = store_temp<StorageBaseAddress>;
libfunc function_call<user@test_contract::test_contract::SomeTest::StorageAccessPosition::read> = function_call<user@test_contract::test_contract::SomeTest::StorageAccessPosition::read>;
libfunc rename<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>> = rename<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<test_contract::test_contract::SomeTest::Position>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<test_contract::test_contract::SomeTest::Position>::unwrap_syscall>;
libfunc alloc_local<felt> = alloc_local<felt>;
libfunc dup<StorageBaseAddress> = dup<StorageBaseAddress>;
libfunc storage_address_from_base = storage_address_from_base;
libfunc dup<felt> = dup<felt>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 0> = enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 0>;
libfunc store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>> = store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>>;
libfunc enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 1> = enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 1>;
libfunc enum_match<core::result::Result::<core::felt, core::array::Array::<core::felt>>> = enum_match<core::result::Result::<core::felt, core::array::Array::<core::felt>>>;
libfunc drop<StorageBaseAddress> = drop<StorageBaseAddress>;
libfunc drop<Uninitialized<felt>> = drop<Uninitialized<felt>>;
libfunc enum_init<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>, 1> = enum_init<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>, 1>;
libfunc store_temp<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>> = store_temp<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>>;
libfunc store_local<felt> = store_local<felt>;
libfunc struct_construct<test_contract::test_contract::SomeTest::Position> = struct_construct<test_contract::test_contract::SomeTest::Position>;
libfunc enum_init<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>, 0> = enum_init<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>, 0>;
libfunc enum_match<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>> = enum_match<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>>;

alloc_local<RangeCheck>() -> ([5]);
alloc_local<GasBuiltin>() -> ([7]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
get_gas([0], [1]) { fallthrough([8], [9]) 9([10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([8]) -> ([4]);
store_temp<GasBuiltin>([9]) -> ([6]);
jump() { 23() };
branch_align() -> ();
drop<Array<felt>>([3]) -> ();
drop<Uninitialized<RangeCheck>>([5]) -> ();
drop<Uninitialized<GasBuiltin>>([7]) -> ();
array_new<felt>() -> ([12]);
felt_const<375233589013918064796019>() -> ([13]);
store_temp<felt>([13]) -> ([13]);
array_append<felt>([12], [13]) -> ([14]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([10]) -> ([16]);
store_temp<GasBuiltin>([11]) -> ([17]);
store_temp<System>([2]) -> ([18]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([15]) -> ([19]);
return([16], [17], [18], [19]);
snapshot_take<Array<felt>>([3]) -> ([3], [20]);
drop<Array<felt>>([3]) -> ();
array_len<felt>([20]) -> ([21]);
u32_const<0>() -> ([22]);
store_temp<u32>([21]) -> ([21]);
store_local<RangeCheck>([5], [4]) -> ([4]);
store_local<GasBuiltin>([7], [6]) -> ([6]);
u32_eq([21], [22]) { fallthrough() 36() };
branch_align() -> ();
struct_construct<Unit>() -> ([23]);
enum_init<core::bool, 0>([23]) -> ([24]);
store_temp<core::bool>([24]) -> ([25]);
jump() { 40() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 1>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([25]);
bool_not_impl([25]) -> ([28]);
store_temp<core::bool>([28]) -> ([28]);
enum_match<core::bool>([28]) { fallthrough([29]) 46([30]) };
branch_align() -> ();
drop<Unit>([29]) -> ();
jump() { 61() };
branch_align() -> ();
drop<Unit>([30]) -> ();
store_temp<System>([2]) -> ([33]);
function_call<user@core::starknet::use_system_implicit>([33]) -> ([31], [32]);
drop<Unit>([32]) -> ();
array_new<felt>() -> ([34]);
felt_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([35]);
store_temp<felt>([35]) -> ([35]);
array_append<felt>([34], [35]) -> ([36]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([36]) -> ([37]);
store_temp<RangeCheck>([4]) -> ([38]);
store_temp<GasBuiltin>([6]) -> ([39]);
store_temp<System>([31]) -> ([40]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([37]) -> ([41]);
return([38], [39], [40], [41]);
get_builtin_costs() -> ([42]);
store_temp<BuiltinCosts>([42]) -> ([42]);
get_gas_all([4], [6], [42]) { fallthrough([43], [44]) 68([45], [46]) };
branch_align() -> ();
store_temp<RangeCheck>([43]) -> ([47]);
store_temp<GasBuiltin>([44]) -> ([48]);
jump() { 79() };
branch_align() -> ();
array_new<felt>() -> ([49]);
felt_const<375233589013918064796019>() -> ([50]);
store_temp<felt>([50]) -> ([50]);
array_append<felt>([49], [50]) -> ([51]);
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([51]) -> ([52]);
store_temp<RangeCheck>([45]) -> ([53]);
store_temp<GasBuiltin>([46]) -> ([54]);
store_temp<System>([2]) -> ([55]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([52]) -> ([56]);
return([53], [54], [55], [56]);
rename<GasBuiltin>([48]) -> ([60]);
store_temp<System>([2]) -> ([61]);
function_call<user@test_contract::test_contract::SomeTest::get_name>([60], [61]) -> ([57], [58], [59]);
enum_match<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([59]) { fallthrough([62]) 86([63]) };
branch_align() -> ();
store_temp<test_contract::test_contract::SomeTest::Position>([62]) -> ([64]);
jump() { 93() };
branch_align() -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 1>([63]) -> ([65]);
store_temp<RangeCheck>([47]) -> ([66]);
store_temp<GasBuiltin>([57]) -> ([67]);
store_temp<System>([58]) -> ([68]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([65]) -> ([69]);
return([66], [67], [68], [69]);
array_new<felt>() -> ([70]);
store_temp<Array<felt>>([70]) -> ([73]);
store_temp<test_contract::test_contract::SomeTest::Position>([64]) -> ([74]);
function_call<user@test_contract::test_contract::SomeTest::PositionSerde::serialize>([73], [74]) -> ([71], [72]);
drop<Unit>([72]) -> ();
enum_init<core::PanicResult::<core::array::Array::<core::felt>>, 0>([71]) -> ([75]);
store_temp<RangeCheck>([47]) -> ([76]);
store_temp<GasBuiltin>([57]) -> ([77]);
store_temp<System>([58]) -> ([78]);
store_temp<core::PanicResult::<core::array::Array::<core::felt>>>([75]) -> ([79]);
return([76], [77], [78], [79]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
store_temp<GasBuiltin>([0]) -> ([5]);
store_temp<System>([1]) -> ([6]);
function_call<user@test_contract::test_contract::SomeTest::name::read>([5], [6]) -> ([2], [3], [4]);
enum_match<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([4]) { fallthrough([7]) 115([8]) };
branch_align() -> ();
store_temp<test_contract::test_contract::SomeTest::Position>([7]) -> ([9]);
jump() { 121() };
branch_align() -> ();
enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 1>([8]) -> ([10]);
store_temp<GasBuiltin>([2]) -> ([11]);
store_temp<System>([3]) -> ([12]);
store_temp<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([10]) -> ([13]);
return([11], [12], [13]);
enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 0>([9]) -> ([14]);
store_temp<GasBuiltin>([2]) -> ([15]);
store_temp<System>([3]) -> ([16]);
store_temp<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([14]) -> ([17]);
return([15], [16], [17]);
dup<test_contract::test_contract::SomeTest::Position>([1]) -> ([1], [2]);
struct_deconstruct<test_contract::test_contract::SomeTest::Position>([2]) -> ([3], [4]);
drop<felt>([4]) -> ();
store_temp<Array<felt>>([0]) -> ([7]);
store_temp<felt>([3]) -> ([8]);
function_call<user@core::serde::FeltSerde::serialize>([7], [8]) -> ([5], [6]);
drop<Unit>([6]) -> ();
struct_deconstruct<test_contract::test_contract::SomeTest::Position>([1]) -> ([9], [10]);
drop<felt>([9]) -> ();
store_temp<Array<felt>>([5]) -> ([13]);
store_temp<felt>([10]) -> ([14]);
function_call<user@core::serde::FeltSerde::serialize>([13], [14]) -> ([11], [12]);
drop<Unit>([12]) -> ();
struct_construct<Unit>() -> ([15]);
store_temp<Array<felt>>([11]) -> ([16]);
store_temp<Unit>([15]) -> ([17]);
return([16], [17]);
felt_const<0>() -> ([2]);
storage_base_address_const<1528802474226268325865027367859591458315299653151958663884057507666229546336>() -> ([3]);
store_temp<GasBuiltin>([0]) -> ([7]);
store_temp<System>([1]) -> ([8]);
store_temp<felt>([2]) -> ([9]);
store_temp<StorageBaseAddress>([3]) -> ([10]);
function_call<user@test_contract::test_contract::SomeTest::StorageAccessPosition::read>([7], [8], [9], [10]) -> ([4], [5], [6]);
rename<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>>([6]) -> ([12]);
function_call<user@core::starknet::SyscallResultTraitImpl::<test_contract::test_contract::SomeTest::Position>::unwrap_syscall>([12]) -> ([11]);
enum_match<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([11]) { fallthrough([13]) 156([14]) };
branch_align() -> ();
store_temp<test_contract::test_contract::SomeTest::Position>([13]) -> ([15]);
jump() { 162() };
branch_align() -> ();
enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 1>([14]) -> ([16]);
store_temp<GasBuiltin>([4]) -> ([17]);
store_temp<System>([5]) -> ([18]);
store_temp<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([16]) -> ([19]);
return([17], [18], [19]);
enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 0>([15]) -> ([20]);
store_temp<GasBuiltin>([4]) -> ([21]);
store_temp<System>([5]) -> ([22]);
store_temp<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([20]) -> ([23]);
return([21], [22], [23]);
array_append<felt>([0], [1]) -> ([2]);
struct_construct<Unit>() -> ([3]);
drop<Unit>([3]) -> ();
struct_construct<Unit>() -> ([4]);
store_temp<Array<felt>>([2]) -> ([5]);
store_temp<Unit>([4]) -> ([6]);
return([5], [6]);
alloc_local<felt>() -> ([5]);
finalize_locals() -> ();
dup<StorageBaseAddress>([3]) -> ([3], [7]);
storage_address_from_base([7]) -> ([6]);
dup<felt>([2]) -> ([2], [14]);
storage_read_syscall([0], [1], [14], [6]) { fallthrough([8], [9], [10]) 186([11], [12], [13]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 0>([10]) -> ([15]);
store_temp<GasBuiltin>([8]) -> ([16]);
store_temp<System>([9]) -> ([17]);
store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([15]) -> ([18]);
jump() { 191() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 1>([13]) -> ([19]);
store_temp<GasBuiltin>([11]) -> ([16]);
store_temp<System>([12]) -> ([17]);
store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([19]) -> ([18]);
enum_match<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([18]) { fallthrough([20]) 195([21]) };
branch_align() -> ();
store_temp<felt>([20]) -> ([4]);
jump() { 204() };
branch_align() -> ();
drop<StorageBaseAddress>([3]) -> ();
drop<felt>([2]) -> ();
drop<Uninitialized<felt>>([5]) -> ();
enum_init<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>, 1>([21]) -> ([22]);
store_temp<GasBuiltin>([16]) -> ([23]);
store_temp<System>([17]) -> ([24]);
store_temp<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>>([22]) -> ([25]);
return([23], [24], [25]);
storage_address_from_base([3]) -> ([26]);
store_local<felt>([5], [4]) -> ([4]);
storage_read_syscall([16], [17], [2], [26]) { fallthrough([27], [28], [29]) 213([30], [31], [32]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 0>([29]) -> ([33]);
store_temp<GasBuiltin>([27]) -> ([34]);
store_temp<System>([28]) -> ([35]);
store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([33]) -> ([36]);
jump() { 218() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt, core::array::Array::<core::felt>>, 1>([32]) -> ([37]);
store_temp<GasBuiltin>([30]) -> ([34]);
store_temp<System>([31]) -> ([35]);
store_temp<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([37]) -> ([36]);
enum_match<core::result::Result::<core::felt, core::array::Array::<core::felt>>>([36]) { fallthrough([38]) 222([39]) };
branch_align() -> ();
store_temp<felt>([38]) -> ([40]);
jump() { 229() };
branch_align() -> ();
drop<felt>([4]) -> ();
enum_init<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>, 1>([39]) -> ([41]);
store_temp<GasBuiltin>([34]) -> ([42]);
store_temp<System>([35]) -> ([43]);
store_temp<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>>([41]) -> ([44]);
return([42], [43], [44]);
struct_construct<test_contract::test_contract::SomeTest::Position>([4], [40]) -> ([45]);
enum_init<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>, 0>([45]) -> ([46]);
store_temp<GasBuiltin>([34]) -> ([47]);
store_temp<System>([35]) -> ([48]);
store_temp<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>>([46]) -> ([49]);
return([47], [48], [49]);
enum_match<core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>>([0]) { fallthrough([1]) 239([2]) };
branch_align() -> ();
store_temp<test_contract::test_contract::SomeTest::Position>([1]) -> ([3]);
jump() { 243() };
branch_align() -> ();
enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 1>([2]) -> ([4]);
store_temp<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([4]) -> ([5]);
return([5]);
enum_init<core::PanicResult::<test_contract::test_contract::SomeTest::Position>, 0>([3]) -> ([6]);
store_temp<core::PanicResult::<test_contract::test_contract::SomeTest::Position>>([6]) -> ([7]);
return([7]);

test_contract::test_contract::SomeTest::__external::get_name@0([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: Array<felt>) -> (RangeCheck, GasBuiltin, System, core::PanicResult::<core::array::Array::<core::felt>>);
core::starknet::use_system_implicit@104([0]: System) -> (System, Unit);
test_contract::test_contract::SomeTest::get_name@108([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::PanicResult::<test_contract::test_contract::SomeTest::Position>);
test_contract::test_contract::SomeTest::PositionSerde::serialize@126([0]: Array<felt>, [1]: test_contract::test_contract::SomeTest::Position) -> (Array<felt>, Unit);
test_contract::test_contract::SomeTest::name::read@143([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::PanicResult::<test_contract::test_contract::SomeTest::Position>);
core::serde::FeltSerde::serialize@167([0]: Array<felt>, [1]: felt) -> (Array<felt>, Unit);
test_contract::test_contract::SomeTest::StorageAccessPosition::read@174([0]: GasBuiltin, [1]: System, [2]: felt, [3]: StorageBaseAddress) -> (GasBuiltin, System, core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>);
core::starknet::SyscallResultTraitImpl::<test_contract::test_contract::SomeTest::Position>::unwrap_syscall@235([0]: core::result::Result::<test_contract::test_contract::SomeTest::Position, core::array::Array::<core::felt>>) -> (core::PanicResult::<test_contract::test_contract::SomeTest::Position>);
