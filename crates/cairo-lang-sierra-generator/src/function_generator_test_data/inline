//! > test inlined function.

//! > test_function_name
test_function_generator

//! > function
fn foo(a: felt) -> felt {
  if a == 2 {
    bar(a)
  } else {
    a
  }
}

//! > function_name
foo

//! > module_code
#[inline(always)]
fn bar(a: felt) -> felt {
  if a == 0 {
    return 1;
  }
  0
}

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > sierra_gen_diagnostics

//! > sierra_code
label0:
felt_const<2>() -> ([1])
dup<felt>([0]) -> ([0], [3])
felt_sub([3], [1]) -> ([2])
label1:
store_temp<felt>([2]) -> ([4])
felt_is_zero([4]) { fallthrough() label2([5]) }
branch_align() -> ()
felt_is_zero([0]) { fallthrough() label4([6]) }
branch_align() -> ()
felt_const<1>() -> ([7])
store_temp<felt>([7]) -> ([8])
jump() { label6() }
label4:
branch_align() -> ()
drop<NonZero<felt>>([6]) -> ()
drop<felt>([9]) -> ()
label5:
felt_const<0>() -> ([9])
label6:
store_temp<felt>([9]) -> ([8])
rename<felt>([8]) -> ([10])
jump() { label3() }
label2:
branch_align() -> ()
drop<NonZero<felt>>([5]) -> ()
drop<felt>([9]) -> ()
store_temp<felt>([0]) -> ([10])
label3:
rename<felt>([10]) -> ([11])
return([11])
