type felt = felt;
type Uninitialized<felt> = Uninitialized<felt>;
type NonZero<felt> = NonZero<felt>;

libfunc alloc_local<felt> = alloc_local<felt>;
libfunc finalize_locals = finalize_locals;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc dup<felt> = dup<felt>;
libfunc felt_is_zero = felt_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt> = drop<felt>;
libfunc drop<Uninitialized<felt>> = drop<Uninitialized<felt>>;
libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_sub = felt_sub;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@fib_local::fib_local::fib> = function_call<user@fib_local::fib_local::fib>;
libfunc felt_const<2> = felt_const<2>;
libfunc store_local<felt> = store_local<felt>;
libfunc felt_add = felt_add;

alloc_local<felt>() -> ([2]);
finalize_locals() -> ();
revoke_ap_tracking() -> ();
dup<felt>([0]) -> ([0], [3]);
felt_is_zero([3]) { fallthrough() 11([4]) };
branch_align() -> ();
drop<felt>([0]) -> ();
drop<Uninitialized<felt>>([2]) -> ();
felt_const<1>() -> ([5]);
store_temp<felt>([5]) -> ([6]);
jump() { 42() };
branch_align() -> ();
drop<NonZero<felt>>([4]) -> ();
felt_const<1>() -> ([7]);
dup<felt>([0]) -> ([0], [9]);
felt_sub([9], [7]) -> ([8]);
store_temp<felt>([8]) -> ([10]);
felt_is_zero([10]) { fallthrough() 24([11]) };
branch_align() -> ();
drop<felt>([0]) -> ();
drop<Uninitialized<felt>>([2]) -> ();
felt_const<1>() -> ([12]);
store_temp<felt>([12]) -> ([13]);
jump() { 41() };
branch_align() -> ();
drop<NonZero<felt>>([11]) -> ();
felt_const<1>() -> ([14]);
dup<felt>([0]) -> ([0], [16]);
felt_sub([16], [14]) -> ([15]);
store_temp<felt>([15]) -> ([17]);
rename<felt>([17]) -> ([18]);
function_call<user@fib_local::fib_local::fib>([18]) -> ([1]);
felt_const<2>() -> ([19]);
felt_sub([0], [19]) -> ([20]);
store_temp<felt>([20]) -> ([21]);
rename<felt>([21]) -> ([23]);
store_local<felt>([2], [1]) -> ([1]);
function_call<user@fib_local::fib_local::fib>([23]) -> ([22]);
felt_add([1], [22]) -> ([24]);
store_temp<felt>([24]) -> ([25]);
rename<felt>([25]) -> ([13]);
rename<felt>([13]) -> ([6]);
rename<felt>([6]) -> ([26]);
return([26]);

fib_local::fib_local::fib@0([0]: felt) -> (felt);
